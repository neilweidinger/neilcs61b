Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the project 2 side?

A: Hexagons are our individual room and our tessllation will be the hallways, except this time they will structure themselves semi-randomly.

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

A: Start by generating different/random types of rooms, then move on to generating multiple rooms, then connecting them with hallways.

-----
Q: What distinguishes a hallway from a room? How are they similar?

A: A hallway is intended to connect two rooms, and is similar to a room in that a player can navigate through it, but different in that it is only one block wide.

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A: My implementation is actually rather similar to the one provided at the end of the lab. It's similar in how it calculates a position for a hexagon column to be drawn and then calls a method that draws a hexagon column, but different in that instead of calculating where the neighboring column is it instead simply recurses and moves the appropriate hexagon tessellation width to the side.

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A: I think an algorithm that generates rooms and then connects them with hallways will be the best bet.
